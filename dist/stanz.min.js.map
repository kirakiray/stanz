{"version":3,"file":"stanz.min.js","sources":["../src/public.mjs","../src/watch.mjs","../src/accessor.mjs","../src/array.mjs","../src/main.mjs","../src/base.mjs"],"sourcesContent":["export const getRandomId = () => Math.random().toString(32).slice(2);\n\nconst objectToString = Object.prototype.toString;\nexport const getType = (value) =>\n  objectToString\n    .call(value)\n    .toLowerCase()\n    .replace(/(\\[object )|(])/g, \"\");\n\nexport const isObject = (obj) => {\n  const type = getType(obj);\n  return type === \"array\" || type === \"object\";\n};\n\nlet asyncsCounter = 0;\nlet afterTimer;\nconst tickSets = new Set();\nexport function nextTick(callback) {\n  const tickId = `t-${getRandomId()}`;\n  clearTimeout(afterTimer);\n  afterTimer = setTimeout(() => {\n    console.log(\"timer!!\");\n    asyncsCounter = 0;\n  });\n  tickSets.add(tickId);\n  Promise.resolve().then(() => {\n    asyncsCounter++;\n    // console.log(\"asyncsCounter => \", asyncsCounter);\n    if (asyncsCounter > 5000) {\n      tickSets.clear();\n      const desc = `nextTick exceeds thread limit`;\n      console.error({\n        desc,\n        lastCall: callback,\n      });\n      throw new Error(desc);\n    }\n    if (tickSets.has(tickId)) {\n      const len = tickSets.size;\n      callback();\n      // if (tickSets.size > len) {\n      //   debugger;\n      // }\n      tickSets.delete(tickId);\n    }\n  });\n  return tickId;\n}\nexport const clearTick = (id) => tickSets.delete(id);\n\nexport function debounce(func, wait = 0) {\n  let timeout = null;\n  let hisArgs = [];\n\n  return function (...args) {\n    hisArgs.push(...args);\n\n    if (wait > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        func.call(this, hisArgs);\n        hisArgs = [];\n        timeout = null;\n      }, wait);\n    } else {\n      if (timeout === null) {\n        timeout = 1;\n        nextTick(() => {\n          func.call(this, hisArgs);\n          hisArgs = [];\n          timeout = null;\n        });\n      }\n    }\n  };\n}\n\n// Enhanced methods for extending objects\nexport const extend = (_this, proto, descriptor = {}) => {\n  [\n    ...Object.getOwnPropertyNames(proto),\n    ...Object.getOwnPropertySymbols(proto),\n  ].forEach((k) => {\n    const result = Object.getOwnPropertyDescriptor(proto, k);\n    const { configurable, enumerable, writable, get, set, value } = result;\n\n    if (\"value\" in result) {\n      if (_this.hasOwnProperty(k)) {\n        _this[k] = value;\n      } else {\n        Object.defineProperty(_this, k, {\n          enumerable,\n          configurable,\n          writable,\n          ...descriptor,\n          value,\n        });\n      }\n    } else {\n      Object.defineProperty(_this, k, {\n        enumerable,\n        configurable,\n        ...descriptor,\n        get,\n        set,\n      });\n    }\n  });\n\n  return _this;\n};\n\nexport function dataRevoked(data) {\n  try {\n    data.xid;\n  } catch (err) {\n    return isRevokedErr(err);\n  }\n\n  return false;\n}\n\nexport function isRevokedErr(error) {\n  const firstLine = error.stack.split(/\\\\n/)[0].toLowerCase();\n  if (firstLine.includes(\"proxy\") && firstLine.includes(\"revoked\")) {\n    return true;\n  }\n\n  return false;\n}\n","import { getRandomId, debounce, dataRevoked } from \"./public.mjs\";\nimport { WATCHS } from \"./main.mjs\";\nconst { assign, freeze } = Object;\n\nclass Watcher {\n  constructor(opts) {\n    assign(this, opts);\n    freeze(this);\n  }\n\n  hasModified(k) {\n    if (this.type === \"array\") {\n      return this.path.includes(this.currentTarget.get(k));\n    }\n\n    const keys = k.split(\".\");\n\n    if (this.currentTarget === this.target && this.name === keys[0]) {\n      return true;\n    }\n\n    const modifieds = getModifieds(this, keys);\n\n    const positionIndex = modifieds.indexOf(this.target);\n    if (positionIndex > -1) {\n      const currentKeys = keys.slice(positionIndex + 1);\n\n      if (!currentKeys.length) {\n        // This is listening for changes in the child object itself\n        return true;\n      }\n\n      return this.name === currentKeys[0];\n    }\n\n    // Data belonging to the chain of change\n    return this.path.includes(this.currentTarget[k]);\n  }\n\n  hasReplaced(k) {\n    if (this.type !== \"set\") {\n      return false;\n    }\n\n    const keys = k.split(\".\");\n\n    if (this.target === this.currentTarget && this.name === keys[0]) {\n      return true;\n    }\n\n    const modifieds = getModifieds(this, keys);\n\n    const positionIndex = modifieds.indexOf(this.target);\n\n    if (positionIndex > -1) {\n      const currentKeys = keys.slice(positionIndex + 1);\n\n      return currentKeys[0] === this.name;\n    }\n\n    return false;\n  }\n}\n\nconst getModifieds = (_this, keys) => {\n  const modifieds = [];\n\n  const cloneKeys = keys.slice();\n  let target = _this.currentTarget;\n  while (cloneKeys.length) {\n    const targetKey = cloneKeys.shift();\n    if (target) {\n      target = target[targetKey];\n    }\n\n    modifieds.push(target);\n  }\n\n  return modifieds;\n};\n\nclass Watchers extends Array {\n  constructor(arr) {\n    super(...arr);\n  }\n\n  hasModified(key) {\n    return this.some((e) => e.hasModified(key));\n  }\n\n  hasReplaced(key) {\n    return this.some((e) => e.hasReplaced(key));\n  }\n}\n\nexport const emitUpdate = ({\n  type,\n  currentTarget,\n  target,\n  name,\n  value,\n  oldValue,\n  args,\n  path = [],\n}) => {\n  // console.log(\"update => \", target.ele);\n  if (path && path.includes(currentTarget)) {\n    console.warn(\"Circular references appear\");\n    return;\n  }\n\n  let options = {\n    type,\n    target,\n    name,\n    oldValue,\n    value,\n  };\n\n  if (type === \"array\") {\n    delete options.value;\n    options.args = args;\n  }\n\n  if (currentTarget._hasWatchs) {\n    const watcher = new Watcher({\n      currentTarget,\n      ...options,\n      path: [...path],\n    });\n\n    currentTarget[WATCHS].forEach((func) => {\n      func(watcher);\n    });\n  }\n\n  currentTarget._update &&\n    currentTarget.owner.forEach((parent) => {\n      emitUpdate({\n        currentTarget: parent,\n        ...options,\n        path: [currentTarget, ...path],\n      });\n    });\n};\n\nexport default {\n  watch(callback) {\n    const wid = \"w-\" + getRandomId();\n\n    this[WATCHS].set(wid, callback);\n\n    return wid;\n  },\n\n  unwatch(wid) {\n    return this[WATCHS].delete(wid);\n  },\n\n  watchTick(callback, wait) {\n    return this.watch(\n      debounce((arr) => {\n        if (dataRevoked(this)) {\n          // console.warn(`The revoked object cannot use watchTick : `, this);\n          return;\n        }\n        arr = arr.filter((e) => {\n          try {\n            e.path.forEach((item) => item.xid);\n          } catch (err) {\n            return false;\n          }\n\n          return true;\n        });\n\n        callback(new Watchers(arr));\n      }, wait || 0)\n    );\n  },\n  // For manual use of emitUpdate\n  refresh(opts) {\n    const options = {\n      ...opts,\n      type: \"refresh\",\n      target: this,\n      currentTarget: this,\n    };\n    emitUpdate(options);\n  },\n};\n","import { isObject } from \"./public.mjs\";\nimport Stanz, { PROXY, isxdata } from \"./main.mjs\";\nimport { emitUpdate } from \"./watch.mjs\";\n\nconst { defineProperties } = Object;\n\nexport const setData = ({ target, key, value, receiver, type, succeed }) => {\n  const oldValue = receiver[key];\n\n  let data = value;\n  if (isxdata(data)) {\n    if (oldValue === value) {\n      return true;\n    }\n    data._owner.push(receiver);\n  } else if (isObject(value)) {\n    const desc = Object.getOwnPropertyDescriptor(target, key);\n    if (!desc || desc.hasOwnProperty(\"value\")) {\n      data = new Stanz(value);\n      data._owner.push(receiver);\n    }\n  }\n\n  const isSame = oldValue === value;\n\n  if (!isSame && isxdata(oldValue)) {\n    clearData(oldValue, receiver);\n  }\n\n  const reval = succeed(data);\n\n  !isSame &&\n    // __unupdate: Let the system not trigger an upgrade, system self-use attribute\n    !target.__unupdate &&\n    emitUpdate({\n      type: type || \"set\",\n      target: receiver,\n      currentTarget: receiver,\n      name: key,\n      value,\n      oldValue,\n    });\n\n  return reval;\n};\n\nexport const clearData = (val, target) => {\n  if (isxdata(val)) {\n    const index = val._owner.indexOf(target);\n    if (index > -1) {\n      val._owner.splice(index, 1);\n    } else {\n      console.error({\n        desc: \"This data is wrong, the owner has no boarding object at the time of deletion\",\n        target,\n        mismatch: val,\n      });\n    }\n  }\n};\n\nexport const handler = {\n  set(target, key, value, receiver) {\n    if (typeof key === \"symbol\") {\n      return Reflect.set(target, key, value, receiver);\n    }\n\n    // Set properties with _ prefix directly\n    if (/^_/.test(key)) {\n      if (!target.hasOwnProperty(key)) {\n        defineProperties(target, {\n          [key]: {\n            writable: true,\n            configurable: true,\n            value,\n          },\n        });\n      } else {\n        Reflect.set(target, key, value, receiver);\n      }\n      return true;\n    }\n\n    try {\n      return setData({\n        target,\n        key,\n        value,\n        receiver,\n        succeed(data) {\n          return Reflect.set(target, key, data, receiver);\n        },\n      });\n    } catch (error) {\n      const err = new Error(`failed to set ${key} \\n ${error.stack}`);\n\n      Object.assign(err, {\n        key,\n        value,\n        target: receiver,\n        error,\n      });\n\n      throw err;\n    }\n  },\n  deleteProperty(target, key) {\n    if (/^_/.test(key) || typeof key === \"symbol\") {\n      return Reflect.deleteProperty(target, key);\n    }\n\n    return setData({\n      target,\n      key,\n      value: undefined,\n      receiver: target[PROXY],\n      type: \"delete\",\n      succeed() {\n        return Reflect.deleteProperty(target, key);\n      },\n    });\n  },\n};\n","import { clearData } from \"./accessor.mjs\";\nimport { SELF, PROXY, isxdata } from \"./main.mjs\";\nimport { isObject } from \"./public.mjs\";\nimport { emitUpdate } from \"./watch.mjs\";\n\nconst mutatingMethods = [\n  \"push\",\n  \"pop\",\n  \"shift\",\n  \"unshift\",\n  \"splice\",\n  \"reverse\",\n  \"sort\",\n  \"fill\",\n  \"copyWithin\",\n];\n\nconst holder = Symbol(\"placeholder\");\n\nfunction compareArrays(oldArray, newArray) {\n  const backupNewArray = Array.from(newArray);\n  const backupOldArray = Array.from(oldArray);\n  const deletedItems = [];\n  const addedItems = new Map();\n\n  const oldLen = oldArray.length;\n  for (let i = 0; i < oldLen; i++) {\n    const oldItem = oldArray[i];\n    const newIndex = backupNewArray.indexOf(oldItem);\n    if (newIndex > -1) {\n      backupNewArray[newIndex] = holder;\n    } else {\n      deletedItems.push(oldItem);\n    }\n  }\n\n  const newLen = newArray.length;\n  for (let i = 0; i < newLen; i++) {\n    const newItem = newArray[i];\n    const oldIndex = backupOldArray.indexOf(newItem);\n    if (oldIndex > -1) {\n      backupOldArray[oldIndex] = holder;\n    } else {\n      addedItems.set(i, newItem);\n    }\n  }\n\n  return { deletedItems, addedItems };\n}\n\nconst fn = {};\n\nconst arrayFn = Array.prototype;\n\nmutatingMethods.forEach((methodName) => {\n  if (arrayFn[methodName]) {\n    fn[methodName] = function (...args) {\n      const backupArr = Array.from(this);\n\n      const reval = arrayFn[methodName].apply(this[SELF], args);\n\n      const { deletedItems, addedItems } = compareArrays(backupArr, this);\n\n      // Refactoring objects as proxy instances\n      for (let [key, value] of addedItems) {\n        if (isxdata(value)) {\n          value._owner.push(this);\n        } else if (isObject(value)) {\n          this.__unupdate = 1;\n          this[key] = value;\n          delete this.__unupdate;\n        }\n      }\n\n      for (let item of deletedItems) {\n        clearData(item, this);\n      }\n\n      emitUpdate({\n        type: \"array\",\n        currentTarget: this,\n        target: this,\n        args,\n        name: methodName,\n        oldValue: backupArr,\n      });\n\n      if (reval === this[SELF]) {\n        return this[PROXY];\n      }\n\n      return reval;\n    };\n  }\n});\n\nexport default fn;\n","import { extend, getRandomId } from \"./public.mjs\";\nimport { handler as stanzHandler } from \"./accessor.mjs\";\nimport arrayFn from \"./array.mjs\";\nimport watchFn from \"./watch.mjs\";\nconst { defineProperties, getOwnPropertyDescriptor, entries } = Object;\n\nexport const SELF = Symbol(\"self\");\nexport const PROXY = Symbol(\"proxy\");\nexport const WATCHS = Symbol(\"watchs\");\nexport const ISXDATA = Symbol(\"isxdata\");\n\nexport const isxdata = (val) => val && !!val[ISXDATA];\n\nexport function constructor(data, handler = stanzHandler) {\n  // const proxySelf = new Proxy(this, handler);\n  let { proxy: proxySelf, revoke } = Proxy.revocable(this, handler);\n\n  // Determines the properties of the listener bubble\n  proxySelf._update = 1;\n\n  let watchs;\n\n  defineProperties(this, {\n    xid: { value: data.xid || getRandomId() },\n    // Save all parent objects\n    _owner: {\n      value: [],\n    },\n    owner: {\n      configurable: true,\n      get() {\n        return new Set(this._owner);\n      },\n    },\n    [ISXDATA]: {\n      value: true,\n    },\n    [SELF]: {\n      configurable: true,\n      get: () => this,\n    },\n    [PROXY]: {\n      configurable: true,\n      get: () => proxySelf,\n    },\n    // Save the object of the listener function\n    [WATCHS]: {\n      get: () => watchs || (watchs = new Map()),\n    },\n    _hasWatchs: {\n      get: () => !!watchs,\n    },\n    _revoke: {\n      value: revoke,\n    },\n  });\n\n  Object.keys(data).forEach((key) => {\n    const descObj = getOwnPropertyDescriptor(data, key);\n    let { value, get, set } = descObj;\n\n    if (get || set) {\n      defineProperties(this, {\n        [key]: descObj,\n      });\n    } else {\n      // Set the function directly\n      proxySelf[key] = value;\n    }\n  });\n\n  return proxySelf;\n}\n\nexport default class Stanz extends Array {\n  constructor(data) {\n    super();\n\n    return constructor.call(this, data);\n  }\n\n  // This method is still in the experimental period\n  revoke() {\n    const self = this[SELF];\n\n    if (self._onrevokes) {\n      self._onrevokes.forEach((f) => f());\n      self._onrevokes.length = 0;\n    }\n\n    self.__unupdate = 1;\n\n    self[WATCHS].clear();\n\n    entries(this).forEach(([name, value]) => {\n      if (isxdata(value)) {\n        this[name] = null;\n      }\n    });\n\n    self._owner.forEach((parent) => {\n      entries(parent).forEach(([name, value]) => {\n        if (value === this) {\n          parent[name] = null;\n        }\n      });\n    });\n\n    delete self[SELF];\n    delete self[PROXY];\n    self._revoke();\n  }\n\n  toJSON() {\n    let obj = {};\n\n    let isPureArray = true;\n    let maxId = -1;\n\n    Object.keys(this).forEach((k) => {\n      let val = this[k];\n\n      if (!/\\D/.test(k)) {\n        k = parseInt(k);\n        if (k > maxId) {\n          maxId = k;\n        }\n      } else {\n        isPureArray = false;\n      }\n\n      if (isxdata(val)) {\n        val = val.toJSON();\n      }\n\n      obj[k] = val;\n    });\n\n    if (isPureArray) {\n      obj.length = maxId + 1;\n      obj = Array.from(obj);\n    }\n\n    const xid = this.xid;\n    defineProperties(obj, {\n      xid: {\n        get: () => xid,\n      },\n    });\n\n    return obj;\n  }\n\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n\n  extend(obj, desc) {\n    return extend(this, obj, desc);\n  }\n\n  get(key) {\n    if (/\\./.test(key)) {\n      const keys = key.split(\".\");\n      let target = this;\n      for (let i = 0, len = keys.length; i < len; i++) {\n        try {\n          target = target[keys[i]];\n        } catch (error) {\n          const err = new Error(\n            `Failed to get data : ${keys.slice(0, i).join(\".\")} \\n${\n              error.stack\n            }`\n          );\n          Object.assign(err, {\n            error,\n            target,\n          });\n          throw err;\n        }\n      }\n\n      return target;\n    }\n\n    return this[key];\n  }\n  set(key, value) {\n    if (/\\./.test(key)) {\n      const keys = key.split(\".\");\n      const lastKey = keys.pop();\n      let target = this;\n      for (let i = 0, len = keys.length; i < len; i++) {\n        try {\n          target = target[keys[i]];\n        } catch (error) {\n          const err = new Error(\n            `Failed to get data : ${keys.slice(0, i).join(\".\")} \\n${\n              error.stack\n            }`\n          );\n          Object.assign(err, {\n            error,\n            target,\n          });\n          throw err;\n        }\n      }\n\n      return (target[lastKey] = value);\n    }\n\n    return (this[key] = value);\n  }\n}\n\nStanz.prototype.extend(\n  { ...watchFn, ...arrayFn },\n  {\n    enumerable: false,\n  }\n);\n","import Stanz, { isxdata } from \"./main.mjs\";\n\nconst stanz = (data) => {\n  return new Stanz(data);\n};\n\nObject.assign(stanz, { is: isxdata });\n\nexport default stanz;\n"],"names":["getRandomId","Math","random","toString","slice","objectToString","Object","prototype","isObject","obj","type","value","call","toLowerCase","replace","afterTimer","asyncsCounter","tickSets","Set","debounce","func","wait","timeout","hisArgs","args","push","clearTimeout","setTimeout","this","callback","tickId","console","log","add","Promise","resolve","then","clear","desc","error","lastCall","Error","has","size","delete","nextTick","assign","freeze","Watcher","constructor","opts","hasModified","k","path","includes","currentTarget","get","keys","split","target","name","positionIndex","getModifieds","indexOf","currentKeys","length","hasReplaced","_this","modifieds","cloneKeys","targetKey","shift","Watchers","Array","arr","super","key","some","e","emitUpdate","oldValue","warn","options","_hasWatchs","watcher","WATCHS","forEach","_update","owner","parent","watchFn","watch","wid","set","unwatch","watchTick","data","xid","err","firstLine","stack","isRevokedErr","dataRevoked","filter","item","refresh","defineProperties","setData","receiver","succeed","isxdata","_owner","getOwnPropertyDescriptor","hasOwnProperty","Stanz","isSame","clearData","reval","__unupdate","val","index","splice","mismatch","handler","Reflect","test","writable","configurable","deleteProperty","undefined","PROXY","holder","Symbol","fn","arrayFn","methodName","backupArr","from","apply","SELF","deletedItems","addedItems","oldArray","newArray","backupNewArray","backupOldArray","Map","oldLen","i","oldItem","newIndex","newLen","newItem","oldIndex","compareArrays","entries","ISXDATA","stanzHandler","watchs","proxy","proxySelf","revoke","Proxy","revocable","_revoke","descObj","self","_onrevokes","f","toJSON","isPureArray","maxId","parseInt","JSON","stringify","extend","proto","descriptor","getOwnPropertyNames","getOwnPropertySymbols","result","enumerable","defineProperty","len","join","lastKey","pop","stanz","is"],"mappings":"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"}